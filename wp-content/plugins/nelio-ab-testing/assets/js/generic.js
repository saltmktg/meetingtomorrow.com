// Let's make sure that console.log doesn't break on IE9 and before...
if ( typeof console === 'undefined' ) {
	window.console = {
		log   : function(){},
		debug : function(){},
		info  : function(){},
		warn  : function(){},
		error : function(){}
	}
}

/**
 * This object contains all the functions and variables that are relevant for
 * tracking Nelio A/B Testing experiments.
 */
NelioAB = {};

/**
 * The information about current experiments is stored in this variable, which
 * is generated by Nelio's backend servers. If, for some reason, the variable
 * could not be loaded, we create a default value that states that no
 * information has to be tracked (that is, the script should behave as if it
 * was not even installed).
 */
NelioABBasic = ( typeof NelioABBasic == 'undefined' ) ? {'hasExpsRunning':false} : NelioABBasic;


/**
 * Plugin version
 */
NelioAB.version = NelioABParams.version;


/**
 * The environment that this user is supposd to use
 */
NelioABEnv = false;


/**
 * Preparing the object NelioAB, which will hold all relevant
 * functions and information.
 */
NelioAB.backend = {};
NelioAB.backend.url = '//' + NelioABParams.backend.domain + '/v' + NelioABParams.backend.version;


/**
 * Adding a "trim" function to JavaScript Strings
 */
if(typeof String.prototype.trim !== 'function') {
  String.prototype.trim = function() {
    return this.replace(/^\s+|\s+$/g, '');
  }
}

/**
 * Extending jQuery with a couple of new functions
 */
NelioAB.jquery = {};
NelioAB.jquery.extend = function() {
	jQuery.fn.extend({

		getFullPath: function () {
			var path = '';
			var elem = this;
			while ( !elem.is('html') ) {
				var node  = elem.get(0);
				var name  = node.nodeName.toLowerCase();
				var id	 = elem.attr('id');
				var clazz = elem.attr('class');
				if ( !elem.is('body') ) {
					if ( typeof id != 'undefined' && id.length > 0 ) {
						name += '#' + id;
						}
					if ( typeof clazz != 'undefined' ) {
						clazz = jQuery.trim( clazz );
						if ( clazz.length > 0 )
							name += '.' + clazz.split(/[\s\n]+/).join('.');
					}
				}
				var siblings = elem.parent().children(name);
				if (siblings.length > 1) name += ':eq(' + siblings.index(node) + ')';
				path = '>' + name + path;
				elem = elem.parent();
			}
			return 'html' + path;
		}

	});
};
NelioAB.jquery.extend();

